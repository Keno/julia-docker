# Build an image that contains all of our cross compilers and all that stuff.
# Since we need virtually everything within the actual workerbase image, just
# build off of that one instead of compiling it all over again
FROM ubuntu:trusty

# Setup a few things we need in order to make it through the build properly
INCLUDE lib/alpha

# Install build tools (BUILD_TOOLS are things needed during the build, but not at runtime)
ARG TEMPORARY_DEPS="gcc-multilib gcc g++ clang libfuse-dev libfreetype6-dev libtiff-dev libgl1-mesa-dev linux-headers-generic"
RUN apt update && apt install -y ${TEMPORARY_DEPS} sudo curl make patch tar gawk autoconf python libtool git bison flex pkg-config zip unzip gdb xz-utils lib32z1
RUN echo "buildworker ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
RUN sed -i.bak -e 's/Defaults[[:space:]]*env_reset//g' /etc/sudoers
RUN sed -i.bak -e 's/Defaults[[:space:]]*secure_path=.*//g' /etc/sudoers
USER buildworker

# We still need a pretty recent cmake, so just build one from scratch like usual
INCLUDE lib/cmake_install

# Get our bash script library ready
COPY build_crosscompiler.sh /build.sh
COPY patches /downloads/patches

# build gcc for x86_64.  Use an especially old glibc version to maximize compatibility
ENV target="x86_64-linux-gnu"
ENV glibc_version=2.12.2
INCLUDE lib/linux_crosscompiler_install
ENV glibc_version=""

# build gcc for i686.  Again use an especially old glibc version to maximize compatibility
ENV target="i686-linux-gnu"
ENV L32="linux32"
ENV glibc_version=2.12.2
INCLUDE lib/linux_crosscompiler_install
ENV L32=""
ENV glibc_version=""

# build for mac64
ENV target="x86_64-apple-darwin14"
INCLUDE lib/osx_crosscompiler_install


# build for win64/win32
ENV target="x86_64-w64-mingw32"
INCLUDE lib/win_crosscompiler_install
ENV target="i686-w64-mingw32"
INCLUDE lib/win_crosscompiler_install

# build for arm7/arm8
ENV target="aarch64-linux-gnu"
INCLUDE lib/linux_crosscompiler_install
ENV target="arm-linux-gnueabihf"
INCLUDE lib/linux_crosscompiler_install

# build gcc for ppc64le (we need a more recent glibc here as well)
# We require at least version 2.22 for the fixes to assembler problems:
# https://sourceware.org/bugzilla/show_bug.cgi?id=18116
# We require at least version 2.24 for the fixes to memset.S:
# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=843691
ENV target="powerpc64le-linux-gnu"
ENV glibc_version=2.25
INCLUDE lib/linux_crosscompiler_install
ENV glibc_version=""
ENV target=""

# Override normal uname with something that fakes out based on ${target}
USER root
COPY fake_uname.sh /usr/local/bin/uname
RUN chmod +x /usr/local/bin/uname

INCLUDE lib/omega
